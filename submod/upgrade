#!/usr/bin/env python3

import sys
import os
import platform
import subprocess as subproc

osname = platform.system()
if osname == 'Windows':
    home = os.environ.get('USERPROFILE')
else:
    home = os.environ.get('HOME')

py = os.path.join(home, 'dotfiles', 'python')
if py not in sys.path:
    sys.path.append(py)
from colour import printc

osname = platform.system()
if osname == 'Windows':
    home = os.environ.get('USERPROFILE')
else:
    home = os.environ.get('HOME')

ret = subproc.run(['git', 'submodule', 'foreach', '--quiet', "echo $name"],
        stdout=subproc.PIPE)

paths = ret.stdout.decode().strip().split('\n')

for path in paths:
    p = os.path.join(home, 'dotfiles', path)
    ret = subproc.run(['git', 'name-rev', '--name-only', 'HEAD'],
            stdout=subproc.PIPE, cwd=p)
    name = ret.stdout.decode().strip()

    if not ("remotes/origin/HEAD" in name or "master" in name or "main" in name):
        # not following master (detached at some tag).
        printc("Skipping {} @ {}".format(path, name), "y")
        continue

    print("Pulling {} @ {}".format(path, name))
    if "main" in name:
        subproc.run(['git', 'pull', 'origin', 'main'], cwd=p)
    else:
        subproc.run(['git', 'pull', 'origin', 'master'], cwd=p)
